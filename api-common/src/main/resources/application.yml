###############################################################################
#
# Data Returns Common API Settings
#
# This configuration file defines default which may be overridden by each APIs
# application.yml file.  This is achieved by using leveraging spring boots
# configuration file resolver which will apply precedence to configuration
# files if they are located in a "config" folder under the classpath root.
# This file is located and loaded from the classpath root to provide defaults.
###############################################################################
spring:
  application:
    admin:
      enabled: true

  data:
    jpa:
      repositories:
        enabled: true
    rest:
      detection-strategy: annotated
      base-path: /api
      return-body-on-create: true
      return-body-on-update: true
      default-page-size: 100
      max-page-size: 1000

  # Spring cache configuration settings.  Use type: simple for local concurrent map cache or type: redis to use a redis backed cache
  cache:
    type: simple

  servlet:
    multipart:
      max-file-size: 4MB

  redis:
    host: localhost
    port: 6379

  aop:
    auto: true
    proxy-target-class: true
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
      naming:
        implicit-strategy: uk.gov.defra.datareturns.persistence.DataReturnsImplicitNamingStrategy
      use-new-id-generator-mappings: true
    properties:
      # disable validation via jpa/hibernate, spring will take care of this
      javax:
        persistence:
          validation:
            mode: none
      hibernate:
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
        jpa:
          compliance:
            global_id_generators: true
      org.hibernate.envers:
        # Configure envers to use a sequence style generator
        use_revision_entity_with_native_id: false
        cache:
          use_query_cache: false

  # Liquibase database migration configuration values
  liquibase:
    changeLog: classpath:/db/changelog/db.changelog-master.xml
    # Disable liquibase migrations by default (may be overriden in project/profile specific configuration)
    enabled: false

## Configuration for the web server
server:
  address: 0.0.0.0
  compression:
    enabled: false

errbit:
  enabled: false
  api-key: 1234567890
  env: Local Development Environment
  url: https://localhost:8080/notifier_api/v2/notices

# Default logging levels (provide minimal level of logging here)
logging:
  level:
    root: warn
    uk.gov: info

    org.springframework.web.servlet.handler: error
    # Database
    org.hibernate: warn
    #    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: off
    liquibase: info
    liquibase.executor.jvm.JdbcExecutor: warn

startup:
  print-environment: false

---
###############################################################################
#
# Profile: debug
#
###############################################################################
spring:
  profiles: debug
  jpa:
    show-sql: true
    properties:
      hibernate.use_sql_comments: true
      hibernate.format_sql: true
      hibernate.generate_statistics: true

# Spring boot debug flag
debug: true

# Configure loggers for debug - should configure debug by default and use warn/info on stuff that is not useful to reduce unwanted spam
logging:
  level:
    root: info
    jndi: info
    uk.gov: debug
    org.springframework.cache: debug
    org.springframework.boot.autoconfigure: debug
    # Database
    org.hibernate: info
    org.hibernate.stat: debug
    org.hibernate.type: trace
    org.hibernate.engine.internal.StatisticalLoggingSessionEventListener: debug
    liquibase: debug
    liquibase.executor.jvm.JdbcExecutor: debug

startup:
  print-environment: true

---

###############################################################################
#
# Profile: h2
#
###############################################################################
spring:
  profiles: h2
  datasource:
    url: jdbc:h2:mem:test
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  # Enable liquibase migrations when running in-memory
  liquibase:
    enabled: true
---
